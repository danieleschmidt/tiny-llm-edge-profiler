# Pre-commit hooks configuration for Tiny LLM Edge Profiler
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.bin$|\.hex$|\.elf$
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: debug-statements
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88', '--target-version=py38']

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: ['--ignore-missing-imports', '--strict']
        exclude: ^(tests/|docs/|scripts/|firmware/)

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'src/', '-f', 'json']
        exclude: ^tests/

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: ^(CHANGELOG\.md|docs/_build/)

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck

  # Python docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        exclude: ^(tests/|docs/|scripts/)

  # Jupyter notebook cleaning
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.0
    hooks:
      - id: nbqa-black
      - id: nbqa-isort
      - id: nbqa-flake8

  # Dependency scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check

  # Git commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.5.2
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Remove unused imports
  - repo: https://github.com/pycqa/autoflake
    rev: v2.2.0
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-duplicate-keys
          - --remove-unused-variables

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(\.secrets\.baseline|tests/fixtures/)

# Local hooks for custom checks
  - repo: local
    hooks:
      - id: firmware-size-check
        name: Check firmware binary size
        entry: scripts/check_firmware_size.sh
        language: script
        files: ^firmware/.*\.(bin|hex|elf)$

      - id: model-validation
        name: Validate model files
        entry: python scripts/validate_models.py
        language: python
        files: ^models/.*\.(onnx|bin|gguf)$

      - id: hardware-config-check
        name: Validate hardware configurations
        entry: python scripts/validate_hardware_configs.py
        language: python
        files: ^configs/hardware/.*\.yaml$

      - id: api-schema-validation
        name: Validate API schemas
        entry: python scripts/validate_api_schemas.py
        language: python
        files: ^src/.*schemas.*\.json$

# Configuration
default_language_version:
  python: python3.8

exclude: |
  (?x)^(
    \.git/|
    \.venv/|
    venv/|
    build/|
    dist/|
    \.eggs/|
    .*\.egg-info/|
    __pycache__/|
    \.pytest_cache/|
    \.mypy_cache/|
    \.coverage|
    htmlcov/|
    firmware/.*/build/|
    docs/_build/|
    \.bin$|
    \.hex$|
    \.elf$|
    \.o$|
    \.d$
  )